# coding: utf-8

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''


def get_list_fibonacci_under(_max):
    _list = [1, 2]
    while _list[-1] + _list[-2] < _max:
        _list.append(_list[-1] + _list[-2])
    return _list


def test_problem2():
    assert get_list_fibonacci_under(100) == [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]


test_problem2()

print sum([i for i in get_list_fibonacci_under(4000000) if i % 2 == 0])
