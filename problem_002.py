# coding: utf-8

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''


def get_list_fibonacci_under(_max):
    _list = [1, 2]
    while _list[-1] + _list[-2] < _max:
        _list.append(_list[-1] + _list[-2])
    return _list


def test_problem2():
    assert get_list_fibonacci_under(100) == [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]


def result(number):
    return sum(filter(lambda x: not x % 2, get_list_fibonacci_under(number)))


def test_result():
    assert result(100) == 44


if __name__ == '__main__':
    test_problem2()
    test_result()
    print(result(4000000))
    # 4613732
